#nullable enable
Funcky.Async.Functional
Funcky.Async.Monads.AwaitableOptionExtensions
Funcky.Async.Monads.OptionTaskAwaiter<TItem>
Funcky.Async.Monads.OptionTaskAwaiter<TItem>.GetResult() -> Funcky.Monads.Option<TItem>
Funcky.Async.Monads.OptionTaskAwaiter<TItem>.IsCompleted.get -> bool
Funcky.Async.Monads.OptionTaskAwaiter<TItem>.OnCompleted(System.Action! continuation) -> void
Funcky.Async.Monads.OptionValueTaskAwaiter<TItem>
Funcky.Async.Monads.OptionValueTaskAwaiter<TItem>.GetResult() -> Funcky.Monads.Option<TItem>
Funcky.Async.Monads.OptionValueTaskAwaiter<TItem>.IsCompleted.get -> bool
Funcky.Async.Monads.OptionValueTaskAwaiter<TItem>.OnCompleted(System.Action! continuation) -> void
static Funcky.Async.Functional.NoOperationAsync() -> System.Threading.Tasks.Task!
static Funcky.Async.Functional.NoOperationAsync<T1, T2, T3, T4, T5, T6, T7, T8>(T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8) -> System.Threading.Tasks.Task!
static Funcky.Async.Functional.NoOperationAsync<T1, T2, T3, T4, T5, T6, T7>(T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7) -> System.Threading.Tasks.Task!
static Funcky.Async.Functional.NoOperationAsync<T1, T2, T3, T4, T5, T6>(T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6) -> System.Threading.Tasks.Task!
static Funcky.Async.Functional.NoOperationAsync<T1, T2, T3, T4, T5>(T1 p1, T2 p2, T3 p3, T4 p4, T5 p5) -> System.Threading.Tasks.Task!
static Funcky.Async.Functional.NoOperationAsync<T1, T2, T3, T4>(T1 p1, T2 p2, T3 p3, T4 p4) -> System.Threading.Tasks.Task!
static Funcky.Async.Functional.NoOperationAsync<T1, T2, T3>(T1 p1, T2 p2, T3 p3) -> System.Threading.Tasks.Task!
static Funcky.Async.Functional.NoOperationAsync<T1, T2>(T1 p1, T2 p2) -> System.Threading.Tasks.Task!
static Funcky.Async.Functional.NoOperationAsync<T1>(T1 p1) -> System.Threading.Tasks.Task!
static Funcky.Async.Functional.RetryAsync<TResult>(System.Func<System.Threading.Tasks.ValueTask<Funcky.Monads.Option<TResult>>>! producer, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<TResult>
static Funcky.Async.Functional.RetryAsync<TResult>(System.Func<System.Threading.Tasks.ValueTask<Funcky.Monads.Option<TResult>>>! producer, Funcky.RetryPolicies.IRetryPolicy! retryPolicy, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<TResult>>
static Funcky.Async.Monads.AwaitableOptionExtensions.GetAwaiter(this Funcky.Monads.Option<System.Threading.Tasks.Task!> option) -> System.Runtime.CompilerServices.TaskAwaiter
static Funcky.Async.Monads.AwaitableOptionExtensions.GetAwaiter(this Funcky.Monads.Option<System.Threading.Tasks.ValueTask> option) -> System.Runtime.CompilerServices.ValueTaskAwaiter
static Funcky.Async.Monads.AwaitableOptionExtensions.GetAwaiter<TItem>(this Funcky.Monads.Option<System.Threading.Tasks.Task<TItem>!> option) -> Funcky.Async.Monads.OptionTaskAwaiter<TItem>
static Funcky.Async.Monads.AwaitableOptionExtensions.GetAwaiter<TItem>(this Funcky.Monads.Option<System.Threading.Tasks.ValueTask<TItem>> option) -> Funcky.Async.Monads.OptionValueTaskAwaiter<TItem>
