#nullable enable
static Funcky.FunctionalAssert.Error<TResult>(Funcky.Monads.Result<TResult> result) -> System.Exception!
static Funcky.FunctionalAssert.Left<TLeft, TRight>(Funcky.Monads.Either<TLeft, TRight> either) -> TLeft
static Funcky.FunctionalAssert.Left<TLeft, TRight>(TLeft expectedLeft, Funcky.Monads.Either<TLeft, TRight> either) -> void
static Funcky.FunctionalAssert.None<TItem>(Funcky.Monads.Option<TItem> option) -> void
static Funcky.FunctionalAssert.Ok<TResult>(Funcky.Monads.Result<TResult> result) -> TResult
static Funcky.FunctionalAssert.Ok<TResult>(TResult expectedResult, Funcky.Monads.Result<TResult> result) -> void
static Funcky.FunctionalAssert.Right<TLeft, TRight>(Funcky.Monads.Either<TLeft, TRight> either) -> TRight
static Funcky.FunctionalAssert.Right<TLeft, TRight>(TRight expectedRight, Funcky.Monads.Either<TLeft, TRight> either) -> void
static Funcky.FunctionalAssert.Some<TItem>(Funcky.Monads.Option<TItem> option) -> TItem
static Funcky.FunctionalAssert.Some<TItem>(TItem expectedValue, Funcky.Monads.Option<TItem> option) -> void
